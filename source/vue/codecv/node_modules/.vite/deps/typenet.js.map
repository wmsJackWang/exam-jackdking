{
  "version": 3,
  "sources": ["../../typenet/src/utils/index.ts", "../../typenet/src/heplers.ts", "../../typenet/index.ts"],
  "sourcesContent": ["// \u7761\u7720\nexport function sleep(delay: number) {\n  return new Promise((resolve) => setTimeout(resolve, delay))\n}\n// \u521B\u5EFA\u6587\u672C\u8282\u70B9\nexport function createTextNode(text: string) {\n  return document.createTextNode(text)\n}\n// \u521B\u5EFA\u5143\u7D20\u8282\u70B9\u5E76\u8BBE\u7F6E\u6587\u672C\u5185\u5BB9\nexport function createTextElement(text: string, style: string) {\n  const node = document.createElement(\"span\")\n  node.textContent = text\n  node.style.cssText = style\n  return node\n}\n// \u6362\u884C\nexport function createLineFeed() {\n  return document.createElement(\"br\")\n}\n", "import { type TypeEffectInstance } from \"../index\"\nexport const INSERT = \"INSERT\",\n  REMOVE = \"REMOVE\",\n  MOVE = \"MOVE\"\n\ntype TextNode = Text | ChildNode\ntype Speed = number | undefined\n\n// \u521B\u5EFA\u5149\u6807\nexport function createCursor(typeInstance: TypeEffectInstance) {\n  const cursorNode = document.createElement(\"div\")\n  cursorNode.textContent = \"|\"\n  cursorNode.className = \"flicker\"\n  typeInstance.typeContainer?.appendChild(cursorNode)\n}\n// \u63D2\u5165\u64CD\u4F5C\nfunction insert(node: TextNode, container: HTMLElement) {\n  const cursor = container.querySelector<HTMLElement>(\".flicker\")\n  container.insertBefore(node, cursor)\n}\n// \u79FB\u52A8\u5149\u6807\nfunction move(node: TextNode, container: HTMLElement) {\n  const cursor = container.querySelector(\".flicker\") as HTMLElement\n  container.insertBefore(cursor, node)\n}\n// \u521B\u5EFA\u6253\u5B57\u5BB9\u5668\nexport function createTypeContainer(typeInstance: TypeEffectInstance) {\n  const container = (typeInstance.typeContainer = document.createElement(\"div\"))\n  container.className = \"type-container\"\n  container.style.cssText = typeInstance.options.style || \"\"\n  typeInstance.root?.appendChild(typeInstance.typeContainer)\n}\n// \u83B7\u53D6\u5F53\u524D\u6587\u672C\nexport function getCurrentChildNodes(root: HTMLElement) {\n  const nodes = Array.from(root.childNodes),\n    childNodes: ChildNode[] = []\n  for (const node of nodes) {\n    if (\n      node.nodeType === 3 ||\n      (node.nodeType == 1 && (node as HTMLElement).className != \"flicker\")\n    ) {\n      childNodes.push(node)\n    }\n  }\n  return childNodes\n}\n\nexport function handingText(\n  container: HTMLElement,\n  node: TextNode,\n  speed: Speed,\n  type: string\n) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      switch (type) {\n        case INSERT:\n          insert(node, container)\n          break\n        case REMOVE:\n          container.removeChild(node)\n          break\n        case MOVE:\n          move(node, container)\n          break\n        default:\n          break\n      }\n      resolve(1)\n    }, speed)\n  })\n}\n", "import {\n  createTextNode,\n  sleep,\n  createLineFeed,\n  createTextElement,\n} from \"./src/utils/index\"\nimport {\n  handingText,\n  createCursor,\n  createTypeContainer,\n  getCurrentChildNodes,\n} from \"./src/heplers\"\nimport { INSERT, MOVE, REMOVE } from \"./src/heplers\"\nimport \"./src/css/animate.css\"\n\nexport type TypeEffectInstance = TypeEffect\nexport type TypeEffectOptions = { speed?: number; style?: string }\nexport type Callback = () => void\n\nexport const defaultTypeEffectOptions = { speed: 100 }\n\nexport default class TypeEffect {\n  typeContainer: HTMLElement = document.body // \u6253\u5B57\u533A\u57DF \u521D\u59CB\u5316\u4E3Abody\n  root: HTMLElement | null // \u6839\u6807\u7B7E\n  callbacks: Array<Callback> = [] // \u5904\u7406\u94FE\u5F0F\u8C03\u7528callbacks\n  cursorPosition = 0\n\n  constructor(\n    private el: string,\n    public options: TypeEffectOptions = defaultTypeEffectOptions\n  ) {\n    this.root = document.querySelector(el)\n    if (!this.root) {\n      console.error(\"please give the correct container.\")\n      return\n    }\n  }\n\n  type(text: string, options?: TypeEffectOptions) {\n    this.callbacks.push(async () => {\n      for (let i = 0, n = text.length; i < n; i++) {\n        const textNode = options?.style\n          ? createTextElement(text[i], options?.style)\n          : createTextNode(text[i])\n        // \u4F7F\u7528\u5EF6\u8FDF\u65F6\u95F4\n        const speed = options?.speed || this.options.speed\n        await handingText(this.typeContainer, textNode, speed, INSERT)\n        this.cursorPosition++\n      }\n    })\n    return this\n  }\n\n  remove(characters = 1, options?: TypeEffectOptions) {\n    // \u83B7\u53D6\u5230\u5F53\u524D\u7684\u5BB9\u5668\u5143\u7D20 \u6267\u884C\u5220\u9664\n    this.callbacks.push(async () => {\n      // \u83B7\u53D6\u5F53\u524D\u6240\u6709\u5B50\u8282\u70B9\n      const childNodes = getCurrentChildNodes(this.typeContainer)\n      // \u80FD\u5220\u9664\u7684\u8282\u70B9\u4E3A\u5149\u6807\u5DE6\u4FA7\u7684\u8282\u70B9\n      let actualCharactersLength = Math.min(characters, this.cursorPosition)\n      // \u9632\u6B62\u8D8A\u754C \u53D6\u7528\u6237\u4E0E\u5B9E\u9645\u5B57\u7B26\u6570\u91CF\u7684\u6700\u5C0F\u503C\n      while (actualCharactersLength--) {\n        const lastChildNode = childNodes[--this.cursorPosition]\n        const speed = options?.speed || this.options.speed\n        await handingText(this.typeContainer, lastChildNode, speed, REMOVE)\n      }\n    })\n    return this\n  }\n\n  move(characters = 1, options?: TypeEffectOptions) {\n    // \u83B7\u53D6\u5230\u5F53\u524D\u7684\u5BB9\u5668\u5143\u7D20 \u6267\u884C\u5220\u9664\n    this.callbacks.push(async () => {\n      const childNodes = getCurrentChildNodes(this.typeContainer),\n        direction = characters > 0 ? \"forward\" : \"backward\"\n      const dict = {\n        // \u8FD8\u5269\u4E0B\u591A\u5C11\u4E2A\u5B57\u7B26\u53EF\u4EE5\u5F80\u524D (\u5F80\u524D\u79FB\u52A8\u540C\u65F6\u4E0D\u80FD\u8D85\u8FC7\u5B57\u7B26\u53F3\u7AEF\u70B9)\n        forward: {\n          actualCharactersLength: Math.min(\n            characters,\n            childNodes.length - this.cursorPosition\n          ),\n          add: 1,\n        },\n        // \u8FD8\u5269\u4E0B\u591A\u5C11\u4E2A\u5B57\u7B26\u53EF\u4EE5\u5F80\u540E (\u5F80\u540E\u79FB\u52A8\u540C\u65F6\u4E0D\u80FD\u8D85\u8FC7\u5B57\u7B26\u5DE6\u7AEF\u70B9)\n        backward: {\n          actualCharactersLength: Math.min(-characters, this.cursorPosition),\n          add: -1,\n        },\n      }\n      while (dict[direction].actualCharactersLength--) {\n        const siblingNode = childNodes[(this.cursorPosition += dict[direction].add)]\n        const speed = options?.speed || this.options.speed\n        await handingText(this.typeContainer, siblingNode, speed, MOVE)\n      }\n    })\n    return this\n  }\n\n  sleep(time: number) {\n    this.callbacks.push(async () => await sleep(time))\n    return this\n  }\n\n  line() {\n    this.callbacks.push(async () => {\n      const br = createLineFeed()\n      this.typeContainer.insertBefore(\n        br,\n        this.typeContainer.childNodes[this.cursorPosition++]\n      )\n    })\n    return this\n  }\n\n  async start() {\n    createTypeContainer(this)\n    createCursor(this)\n    for (const cb of this.callbacks) await cb.apply(this) // \u5904\u7406\u5185\u5BB9callbacks\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
