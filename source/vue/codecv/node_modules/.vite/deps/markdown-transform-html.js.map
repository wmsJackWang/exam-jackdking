{
  "version": 3,
  "sources": ["../../markdown-transform-html/lib/core/parseImage.ts", "../../markdown-transform-html/lib/core/parseSuperLink.ts", "../../markdown-transform-html/lib/core/parseText.ts", "../../markdown-transform-html/utils/index.ts", "../../markdown-transform-html/lib/core/parseBlock.ts", "../../markdown-transform-html/lib/core/parseCode.ts", "../../markdown-transform-html/lib/core/parseHorLine.ts", "../../markdown-transform-html/lib/core/parseTitle.ts", "../../markdown-transform-html/lib/core/parseTable.ts", "../../markdown-transform-html/lib/core/parseHeadLayout.ts", "../../markdown-transform-html/lib/core/parseLayout.ts", "../../markdown-transform-html/lib/core/parseMainLayout.ts", "../../markdown-transform-html/lib/core/parseListItem.ts", "../../markdown-transform-html/lib/core/parseToHTML.ts"],
  "sourcesContent": ["import { matchImage } from \"../../utils/index\";\n\nexport function parseImage(s: string) {\n  let result = '';\n  while (matchImage.test(s)) {\n    let altStartIdx = s.indexOf('![');\n    let prefix = s.slice(0, altStartIdx);\n    result += prefix;\n    s = s.slice(altStartIdx + 2);\n    let altEndIdx = s.indexOf('](');\n    let alt = s.slice(0, altEndIdx);\n    s = s.slice(altEndIdx + 2);\n    let linkEnd = s.indexOf(\")\");\n    let link = s.slice(0, linkEnd);\n    s = s.slice(linkEnd + 1);\n    result += `<img alt=${alt} src=${link} />`;\n  }\n  return result + s;\n}", "import { matchSuperLink } from \"../../utils/index\";\n\nexport function parseSuperLink(s: string) {\n  let result = '';\n  while (matchSuperLink.test(s)) {\n    let altStartIdx = s.indexOf('[');\n    let prefix = s.slice(0, altStartIdx);\n    result += prefix;\n    s = s.slice(altStartIdx + 1);\n    let altEndIdx = s.indexOf('](');\n    let alt = s.slice(0, altEndIdx);\n    s = s.slice(altEndIdx + 2);\n    let linkEnd = s.indexOf(\")\");\n    let link = s.slice(0, linkEnd);\n    s = s.slice(linkEnd + 1);\n    result += `<a href=${link} target=\"_blank\">${alt}</a>`;\n  }\n  return result + s;\n}", "import { parseImage } from \"./parseImage\";\nimport { parseSuperLink } from \"./parseSuperLink\";\n\nexport function parseNormalText(text: string, inner: boolean = false) {\n  let result = processStrongText(text);\n  result = processObliqueText(result);\n  // result = processStrongText2(result);\n  // result = processObliqueText2(result);\n  result = parseSingleLineCode(result);\n  result = processDeleteText(result);\n  result = parseImage(result);\n  result = parseSuperLink(result);\n  result = parseIcon(result);\n  return inner ? result : `<p>${result}</p>`;\n}\n\nfunction processStrongText(text: string) {\n  let result = '', idx = -1;\n  while ((idx = text.indexOf(\"**\")) != -1) {\n    result += text.slice(0, idx);\n    text = text.slice(idx + 2)\n    let lastIdx = text.indexOf(\"**\");\n    if(lastIdx == -1) {\n      text = '**' + text;\n      break;\n    }\n    result += `<strong>${text.slice(0, lastIdx)}</strong>`;\n    text = text.slice(lastIdx + 2)\n  }\n  text && (result += text);\n  return result;\n}\n// \u6682\u65F6\u4E0D\u7528 \u56E0\u4E3A\u5B83\u4F1A\u5F71\u54CD\u5305\u542B__\u7684\u5B57\u7B26\n// function processStrongText2(text: string) {\n//   let result = '', idx = -1;\n//   while ((idx = text.indexOf(\"__\")) != -1) {\n//     result += text.slice(0, idx);\n//     text = text.slice(idx + 2)\n//     let lastIdx = text.indexOf(\"__\");\n//     if(lastIdx == -1) {\n//       text = '__' + text;\n//       break;\n//     }\n//     result += `<strong>${text.slice(0, lastIdx)}</strong>`;\n//     text = text.slice(lastIdx + 2)\n//   }\n//   text && (result += text);\n//   return result;\n// }\nfunction processObliqueText(text: string) {\n  let result = '', idx = -1;\n  while ((idx = text.indexOf(\"*\")) != -1) {\n    result += text.slice(0, idx);\n    text = text.slice(idx + 1)\n    let lastIdx = text.indexOf(\"*\");\n    if(lastIdx == -1) {\n      text = '*' + text;\n      break;\n    }\n    result += `<i>${text.slice(0, lastIdx)}</i>`;\n    text = text.slice(lastIdx + 1)\n  }\n  text && (result += text);\n  return result;\n}\n// function processObliqueText2(text: string) {\n//   let result = '', idx = -1;\n//   while ((idx = text.indexOf(\"_\")) != -1) {\n//     result += text.slice(0, idx);\n//     text = text.slice(idx + 1)\n//     let lastIdx = text.indexOf(\"_\");\n//     if(lastIdx == -1) {\n//       text = '_' + text;\n//       break;\n//     }\n//     result += `<i>${text.slice(0, lastIdx)}</i>`;\n//     text = text.slice(lastIdx + 1)\n//   }\n//   text && (result += text);\n//   return result;\n// }\n// \u5220\u9664\u7EBF\nfunction processDeleteText(text: string) {\n  let result = '', idx = -1;\n  while ((idx = text.indexOf(\"~~\")) != -1) {\n    result += text.slice(0, idx);\n    text = text.slice(idx + 2)\n    let lastIdx = text.indexOf(\"~~\");\n    if(lastIdx == -1) {\n      text = '~~' + text;\n      break;\n    }\n    result += `<del>${text.slice(0, lastIdx)}</del>`;\n    text = text.slice(lastIdx + 2)\n  }\n  text && (result += text);\n  return result;\n}\n// \u5904\u7406\u5355\u884Ccode\nfunction parseSingleLineCode(text: string) {\n  let result = '', idx = -1;\n  while ((idx = text.indexOf(\"`\")) != -1) {\n    result += text.slice(0, idx);\n    text = text.slice(idx + 1)\n    let lastIdx = text.indexOf(\"`\");\n    if(lastIdx == -1) {\n      text = '`' + text;\n      break;\n    }\n    result += `<code class=single-code>${text.slice(0, lastIdx)}</code>`;\n    text = text.slice(lastIdx + 1)\n  }\n  text && (result += text);\n  return result;\n}\n// \u5904\u7406\u56FE\u6807\nfunction parseIcon(text: string) {\n  return text.replace(/icon:(\\w+)(\\s|\\b)/g, ($, $1) => {\n    return `<i class='iconfont icon-${$1}'></i>`;\n  })\n}", "import { type IListItem } from \"../lib/core/parseListItem\";\nimport { parseNormalText } from \"../lib/core/parseText\";\n// \u6B63\u5219\nexport const matchTitle: RegExp = /(#+)\\s(.*)/g,\n  matchOrderList = /^\\s*(\\d+)\\.\\s(.+)/,\n  matchSuperLink = /\\[(.*)\\]\\((.*)\\)/,\n  matchImage = /!\\[(.*)\\]\\((.*)\\)/;\n\nexport function processFormat(list: string[]) {\n  // \u591A\u4E2A\u6362\u884C\u5408\u5E76\u4E3A\u4E00\u4E2A\n  if (/^\\s+/.test(list[0])) {\n    list[0] = list[0].replace(/^(\\s+)/g, ($1) => \"\\n\");\n  }\n  // \u5982\u679C\u7B2C\u4E00\u4E2A\u5143\u7D20\u6CA1\u6709\u6362\u884C\u7B26 \u90A3\u4E48\u5C31\u7ED9\u4ED6\u52A0\u4E0A\uFF08\u540E\u7EED\u7684\u5224\u65AD\u9700\u8981\u4F9D\u8D56\u6362\u884C\u7B26\uFF09\n  if (!list[0].startsWith(\"\\n\")) {\n    list[0] = \"\\n\" + list[0];\n  }\n}\n// \u6709\u5E8F\u5217\u8868\u65E0\u5E8F\u5217\u8868\u7684\u751F\u6210\nfunction processListItem(nodes: IListItem[], order: boolean) {\n  let s = order ? \"<ol>\" : \"<ul>\";\n  for (const node of nodes) {\n    s += `<li>${parseNormalText(\n      node.content + genTemplateStringOfNodes(node.children),\n      true\n    )}</li>`;\n  }\n  s += order ? \"</ol>\" : \"</ul>\";\n  return s;\n}\nexport function genTemplateStringOfNodes(nodes: IListItem[]) {\n  let s = \"\",\n    i = 0,\n    n = nodes.length;\n  if (n === 0) return \"\";\n  while (i < n) {\n    const order_list = [],\n      no_order_list = [];\n    while (i < n && nodes[i].type === \"no_order\") {\n      no_order_list.push(nodes[i]);\n      i++;\n    }\n    s += processListItem(no_order_list, false);\n    while (i < n && nodes[i].type === \"order\") {\n      order_list.push(nodes[i]);\n      i++;\n    }\n    s += processListItem(order_list, true);\n  }\n  return s.replace(/<ul><\\/ul>/, \"\").replace(/<ol><\\/ol>/, \"\");\n}\n\nexport function isOrderList(s: string) {\n  return matchOrderList.test(s);\n}\n\nexport function isNoOrderList(s: string) {\n  let idx = s.indexOf(\"- \");\n  return idx == 0 || (idx != -1 && !s.slice(0, idx).trim());\n}\n\nexport function isTitle(s: string) {\n  return s.indexOf(\"#\") != -1;\n}\n\nexport function isImage(s: string) {\n  return matchImage.test(s);\n}\n\nexport function isSuperLink(s: string) {\n  return matchSuperLink.test(s);\n}\n\nexport function isPreCode(s: string) {\n  return s.startsWith(\"```\");\n}\n\nexport function isBLock(s: string) {\n  return /^>/.test(s.trim());\n}\n\nexport function isNeedEndChar(i: number, n: number, ch: string) {\n  return i < n - 1 ? ch : \"\";\n}\n\nexport function isHTMLTag(s: string) {\n  return [\n    \"span\",\n    \"p\",\n    \"q\",\n    \"ul\",\n    \"li\",\n    \"ol\",\n    \"div\",\n    \"strong\",\n    \"a\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"i\",\n  ].includes(s);\n}\n// \u6682\u65F6\u5199\u8FD9\u4E48\u591A \u4EE5\u540E\u8865\u5145...\nexport function isFile(s: string) {\n  return [\n    \"txt\",\n    \"vue\",\n    \"js\",\n    \"css\",\n    \"html\",\n    \"png\",\n    \"jpg\",\n    \"gif\",\n    \"ts\",\n    \"less\",\n    \"scss\",\n    \"json\",\n    \"md\",\n  ].includes(s);\n}\n// \u666E\u901A\u6570\u636E \u4E0A\u9762\u7684\u5339\u914D\u6761\u4EF6\u90FD\u6CA1\u6709\u88AB\u5339\u914D\u5230\nexport function isNormalData(content: string) {\n  return (\n    !content.includes(\"<\") &&\n    !content.includes(\")\") &&\n    !content.includes(\"(\") &&\n    !content.includes(\"{\") &&\n    !content.includes(\"}\")\n  );\n}\n// \u662F\u5426\u662F\u6CE8\u91CA\u8282\u70B9\nexport function isComments(s: string) {\n  return (\n    s.startsWith(\"//\") ||\n    s.startsWith(\"/*\") ||\n    s.startsWith(\"*\") ||\n    s.startsWith(\"#\")\n  );\n}\n// \u662F\u5426\u662F\u6C34\u5E73\u5206\u5272\u7EBF\nexport function isHorizontalLine(s: string) {\n  return s.trim() === \"---\";\n}\n\nexport function isFrontChar(i: number, s: string) {\n  return i !== 0 ? s : \"\";\n}\n\nexport function isTable(s: string) {\n  return s.trim()[0] === \"|\";\n}\n\nexport function native(s: string) {\n  return s.replace(/</g, \"&lt;\");\n}\n\nexport function isMultColumnStart(s: string) {\n  return s.trim() === \"::: start\" || s.trim() === \":::start\";\n}\n\nexport function isMultColumnEnd(s: string) {\n  return s.trim() === \"::: end\" || s.trim() === \":::end\";\n}\n\nexport function isMultColumn(s: string) {\n  return s.trim() === \":::\";\n}\n\nexport function isHeadLayoutStart(s: string) {\n  return s.trim() === \"::: headStart\" || s.trim() === \":::headStart\";\n}\n\nexport function isHeadLayoutEnd(s: string) {\n  return s.trim() === \"::: headEnd\" || s.trim() === \":::headEnd\";\n}\n\nexport function isMainLayoutStart(s: string) {\n  return s.trim() === \"::: mainStart\" || s.trim() === \":::mainStart\";\n}\n\nexport function isMainLayoutEnd(s: string) {\n  return s.trim() === \"::: mainEnd\" || s.trim() === \":::mainEnd\";\n}\n", "export function parseBlock(text: string) {\n  return `<blockquote>${text.slice(1)}</blockquote>`\n}", "import { ITransformOptions, TemplateList } from \"./parseToHTML\";\n// import Prism from \"prismjs\";\n// import \"prismjs/themes/prism-tomorrow.min.css\";\n// import \"prismjs/plugins/line-numbers/prism-line-numbers.min.css\";\n// import \"prismjs/plugins/line-numbers/prism-line-numbers.min.js\";\n// import \"prismjs/plugins/toolbar/prism-toolbar.min.js\";\n// import \"prismjs/plugins/toolbar/prism-toolbar.min.css\";\n// import \"prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js\";\n// import \"prismjs/plugins/show-language/prism-show-language.min.js\";\n\n// // \u89E3\u6790\u7684\u8BED\u8A00 \u9884\u8BBE...\n// import \"prismjs/components/prism-java.min.js\";\n// import \"prismjs/components/prism-css.min.js\";\n// import \"prismjs/components/prism-dart.min.js\";\n// import \"prismjs/components/prism-go.min.js\";\n// import \"prismjs/components/prism-http.min.js\";\n// import \"prismjs/components/prism-json.min.js\";\n// import \"prismjs/components/prism-kotlin.min.js\";\n// import \"prismjs/components/prism-scss.min.js\";\n// import \"prismjs/components/prism-python.min.js\";\n// import \"prismjs/components/prism-ruby.min.js\";\n// import \"prismjs/components/prism-rust.min.js\";\n// import \"prismjs/components/prism-swift.min.js\";\n// import \"prismjs/components/prism-sql.min.js\";\n// import \"prismjs/components/prism-typescript.min.js\";\n// import \"prismjs/components/prism-c.min.js\";\n// import \"prismjs/components/prism-cpp.min.js\";\n/**\n * @param templates md\u5207\u5272\u540E\u7684\u6A21\u7248\n * @param i \u5F53\u524D\u5F00\u59CB\u5904\u7406\u4F4D\u7F6E\n * @param templateLength \u6A21\u677F\u7684\u603B\u957F\u5EA6\n * @returns \u89E3\u6790\u540E\u7684\u5E26\u8BED\u6CD5\u9AD8\u4EAE\u7684\u4EE3\u7801\u5757\n */\nexport function parseCode(\n  templates: TemplateList,\n  i: number,\n  templateLength: number,\n  options: ITransformOptions\n) {\n  let result = \"\",\n    language = templates[i].slice(3).trim().toLowerCase();\n  ++i;\n  while (i < templateLength && !templates[i].startsWith(\"```\")) {\n    result += templates[i] + \"\\n\";\n    i++;\n  }\n  // \u4EE5\u9632\u4E0B\u6B21\u8FDB\u5165, \u7ED3\u675F\u6807\u5FD7\n  templates[i] = \"\";\n  const highlight = options.highlight ? `language-${language}` : \"\",\n    lineNumber = options.lineNumber ? \"line-numbers\" : \"\",\n    classes = [highlight, lineNumber].join(\" \");\n  // result = `<pre><code ${classes && `class='${classes}'`}>${Prism.highlight(\n  //   result,\n  //   Prism.languages[language],\n  //   language\n  // )}</code></pre>`;\n  result = `<pre><code ${classes && `class='${classes}'`}>${result}</code></pre>`;\n  return { startIdx: i, result };\n}\n\n// export const reHighlight = Prism.highlightAll;\n", "// \u5904\u7406\u6C34\u5E73\u5206\u5272\u7EBF\nexport function parseHorizontalLine(text: string) {\n  if(text.length !== 3) {\n    return text;\n  }\n  return text === '---' ? `<hr/>` : text;\n}", "import { matchTitle } from \"../../utils/index\";\nimport { parseNormalText } from \"./parseText\";\n\nexport function getTitleLevel(level: string) {\n  return level.length > 6 ? 6 : level.length;\n}\n\nexport function parseTitle(s: string) {\n  return s.trim().replace(matchTitle, ($1, $2, $3) => {\n    return `<h${getTitleLevel($2)}>${parseNormalText($3, true)}</h${getTitleLevel($2)}>`;\n  });\n}", "import { parseNormalText } from \"./parseText\";\n\nexport function parseTable(\n  templates: string[],\n  i: number,\n  templateLength: number\n) {\n  let result = \"<table>\";\n  // \u5904\u7406\u6807\u9898\n  result += processTableTHead(templates[i]);\n  result += `<tbody >`;\n  ++i;\n  for (; i < templateLength; i++) {\n    if (templates[i].trim()[0] === \"|\") {\n      result += processTabletBody(templates[i]);\n    } else {\n      break;\n    }\n  }\n  result += `</tbody></table>`;\n  result = result.replace(/<tr><\\/tr>/, \"\");\n  return { startIdx: i - 1, result };\n}\n\nfunction processTableTHead(s: string) {\n  let preIdx = -1,\n    template = \"<thead><tr>\";\n  for (let i = 0, n = s.length; i < n; i++) {\n    if (\n      s[i] == \"|\" &&\n      isValidedSplitChar(s, i - 1) &&\n      isValidedSplitChar(s, i + 1)\n    ) {\n      if (preIdx != -1) {\n        template += `<th>${parseNormalText(s.slice(preIdx + 1, i))}</th>`;\n      }\n      preIdx = i;\n    }\n  }\n  return template + `</tr></thead>`;\n}\n\nfunction processTabletBody(s: string) {\n  let preIdx = -1,\n    template = \"<tr>\";\n  for (let i = 0, n = s.length; i < n; i++) {\n    if (\n      s[i] == \"|\" &&\n      isValidedSplitChar(s, i - 1) &&\n      isValidedSplitChar(s, i + 1)\n    ) {\n      if (preIdx != -1) {\n        let cnts = s.slice(preIdx + 1, i);\n        if (cnts.trim()[0] === \"-\") {\n          continue;\n        }\n        template += `<td>${parseNormalText(cnts)}</td>`;\n      }\n      preIdx = i;\n    }\n  }\n  return template + `</tr>`;\n}\n\nfunction isValidedSplitChar(s: string, i: number) {\n  return s[i] === \" \" || s[i] == undefined;\n}\n", "import { isHeadLayoutEnd } from \"../../utils/index\";\nimport { ITransformOptions, markdownToHTML } from \"./parseToHTML\";\n\nexport default function parseHeadLayout(\n  templates: string[],\n  i: number,\n  templateLength: number,\n  options: ITransformOptions\n) {\n  let resultStr = `<div class=head-layout>`,\n    subStr = \"\";\n  ++i;\n  while (i < templateLength && !isHeadLayoutEnd(templates[i])) {\n    if (templates[i].trim()) {\n      subStr += templates[i] + \"\\n\";\n    }\n    i++;\n  }\n  resultStr += markdownToHTML(subStr, { ...options, xss: false }) + \"</div>\";\n  return { result: resultStr, startIdx: i };\n}\n", "import { isHeadLayoutStart, isMultColumn, isMultColumnEnd, isMultColumnStart } from \"../../utils/index\";\nimport parseHeadLayout from \"./parseHeadLayout\";\nimport { ITransformOptions, markdownToHTML } from \"./parseToHTML\";\n\nexport default function parseLayout(templates: string[], i: number, templateLength: number, options: ITransformOptions) {\n  let resultStr = `<div class=flex-layout>`, tmpS = '';\n  ++i;\n  while (i < templateLength && !isMultColumnEnd(templates[i])) {\n    if (isMultColumnStart(templates[i])) {\n      const { result, startIdx } = parseLayout(templates, i, templateLength, options);\n      tmpS += result;\n      i = startIdx;\n    } else if (isHeadLayoutStart(templates[i])) {\n      const { result, startIdx } = parseHeadLayout(templates, i, templateLength, options)\n      tmpS += result;\n      i = startIdx;\n    } else if (isMultColumn(templates[i])) {\n      resultStr += `<div class=flex-layout-item>${markdownToHTML(tmpS, { ...options, xss: false })}</div>`;\n      tmpS = '';\n    } else {\n      tmpS += templates[i].trim() ? '\\n' + templates[i] + '\\n' : '';\n    }\n    i++;\n  }\n  resultStr += `<div class=flex-layout-item>${markdownToHTML(tmpS, { ...options, xss: false })}</div>`;\n  resultStr += `</div>`;\n  return { result: resultStr, startIdx: i }\n}", "import { isMainLayoutEnd } from \"../../utils/index\";\nimport { ITransformOptions, markdownToHTML } from \"./parseToHTML\";\n\nexport default function parseMainLayout(\n  templates: string[],\n  i: number,\n  templateLength: number,\n  options: ITransformOptions\n) {\n  let resultStr = `<div class=main-layout>`,\n    subStr = \"\";\n  ++i;\n  while (i < templateLength && !isMainLayoutEnd(templates[i])) {\n    if (templates[i].trim()) {\n      subStr += templates[i] + \"\\n\";\n    }\n    i++;\n  }\n  resultStr += markdownToHTML(subStr, { ...options, xss: false }) + \"</div>\";\n  return { result: resultStr, startIdx: i };\n}\n", "import {\n  genTemplateStringOfNodes,\n  isNoOrderList,\n  isOrderList,\n  processFormat,\n} from \"../../utils/index\";\nimport { TemplateList } from \"./parseToHTML\";\n\nexport function parseListItem(\n  templates: TemplateList,\n  i: number,\n  templateLength: number\n) {\n  let result = \"\";\n  for (; i < templateLength; i++) {\n    if (!templates[i].trim()) {\n      continue;\n    }\n    if (isOrderList(templates[i]) || isNoOrderList(templates[i])) {\n      result += templates[i] + \"\\n\";\n    } else {\n      break;\n    }\n  }\n  result = processList(result);\n  return { startIdx: i, result };\n}\n\nfunction processList(template: string) {\n  const list: Array<string> | null = template.match(/(\\s)*(-|\\d+\\.)\\s(.+)/g);\n  if (!list) {\n    return template;\n  }\n  processFormat(list);\n  const nodes = parseNoOrderSyntax(list);\n  const root = genTemplateStringOfNodes(nodes);\n  return root;\n}\n// \u5B9A\u4E49\u5217\u8868\u9879\u7684\u63A5\u53E3\nexport interface IListItem {\n  type: \"no_order\" | \"order\";\n  content: string;\n  children: IListItem[];\n}\n\n/**\n * \u89E3\u6790\u65E0\u5E8F\u5217\u8868\u8BED\u6CD5\u7684\u51FD\u6570\n * @param list \u5305\u542BMarkdown\u5217\u8868\u8BED\u6CD5\u7684\u5B57\u7B26\u4E32\u6570\u7EC4\n * @returns \u89E3\u6790\u540E\u7684\u5217\u8868\u9879\u6570\u7EC4\n */\nfunction parseNoOrderSyntax(list: string[]): IListItem[] {\n  // \u521D\u59CB\u5316\u53D8\u91CF\n  const lines = list;\n  const result: IListItem[] = [];\n  const stack: { indent: number; item: IListItem }[] = [];\n\n  // \u904D\u5386\u8F93\u5165\u7684\u5B57\u7B26\u4E32\u6570\u7EC4\n  lines.forEach((line) => {\n    // \u8DF3\u8FC7\u7A7A\u884C\n    if (line.trim() === \"\") {\n      return;\n    }\n\n    // \u8BA1\u7B97\u884C\u9996\u7A7A\u683C\u6570\u548C\u53BB\u9664\u9996\u7A7A\u683C\u540E\u7684\u5185\u5BB9\n    const leadingSpaces = line.length - line.trimLeft().length;\n    const lineContent = line.trim();\n\n    // \u5904\u7406\u7F29\u8FDB\uFF0C\u5F39\u51FA\u4E0D\u518D\u9700\u8981\u7684\u9879\n    while (stack.length && leadingSpaces <= stack[stack.length - 1].indent) {\n      stack.pop();\n    }\n\n    let item: IListItem | null = null;\n\n    // \u5224\u65AD\u662F\u5426\u4E3A\u65E0\u5E8F\u5217\u8868\u9879\n    if (/^-\\s/.test(lineContent)) {\n      item = { type: \"no_order\", content: lineContent.slice(2), children: [] };\n    }\n    // \u5224\u65AD\u662F\u5426\u4E3A\u6709\u5E8F\u5217\u8868\u9879\n    else if (/^(\\d+\\.)\\s/.test(lineContent)) {\n      item = {\n        type: \"order\",\n        content: lineContent.slice(RegExp.$1.length),\n        children: [],\n      };\n    }\n\n    // \u5982\u679C\u6210\u529F\u8BC6\u522B\u5217\u8868\u9879\uFF0C\u5219\u5C06\u5176\u6DFB\u52A0\u5230\u7ED3\u679C\u6570\u7EC4\u4E2D\n    if (item) {\n      if (stack.length) {\n        stack[stack.length - 1].item.children.push(item);\n      } else {\n        result.push(item);\n      }\n      stack.push({ indent: leadingSpaces, item });\n    }\n  });\n\n  return result;\n}\n", "import {\n  isHeadLayoutStart,\n  isMultColumnStart,\n  isTable,\n  native,\n  isHorizontalLine,\n  isMainLayoutStart,\n} from \"../../utils/index\";\nimport { parseBlock } from \"./parseBlock\";\nimport { parseCode } from \"./parseCode\";\nimport { parseHorizontalLine } from \"./parseHorLine\";\nimport { parseNormalText } from \"./parseText\";\nimport { parseTitle } from \"./parseTitle\";\nimport {\n  isBLock,\n  isNoOrderList,\n  isOrderList,\n  isPreCode,\n  isTitle,\n} from \"../../utils/index\";\nimport { parseTable } from \"./parseTable\";\nimport parseLayout from \"./parseLayout\";\nimport parseHeadLayout from \"./parseHeadLayout\";\nimport parseMainLayout from \"./parseMainLayout\";\nimport { parseListItem } from \"./parseListItem\";\n\nexport type TemplateList = string[];\nexport type TemplateStr = string;\nexport interface ITransformOptions {\n  lineNumber?: boolean;\n  highlight?: boolean;\n  xss?: boolean;\n}\n\nconst defaultOptions: ITransformOptions = {\n  lineNumber: false,\n  highlight: false,\n  xss: true, // \u9ED8\u8BA4\u8FDB\u884Cxss\u5904\u7406\n};\nexport function markdownToHTML(template: string, options?: ITransformOptions) {\n  let op = options || defaultOptions,\n    templateStr: TemplateStr = \"\";\n  op = Object.assign({ ...defaultOptions }, op);\n  let templates: TemplateList = op.xss\n      ? native(template).split(\"\\n\")\n      : template.split(\"\\n\"),\n    len = templates?.length || 0;\n\n  for (let i = 0; i < len; ) {\n    if (isTitle(templates[i])) {\n      // \u8BF4\u660E\u4E3A\u6807\u9898\n      templateStr += parseTitle(templates[i]);\n    } else if (isHeadLayoutStart(templates[i])) {\n      const { result, startIdx } = parseHeadLayout(templates, i, len, op);\n      i = startIdx;\n      templateStr += result;\n    } else if (isMainLayoutStart(templates[i])) {\n      const { result, startIdx } = parseMainLayout(templates, i, len, op);\n      i = startIdx;\n      templateStr += result;\n    } else if (isMultColumnStart(templates[i])) {\n      const { result, startIdx } = parseLayout(templates, i, len, op);\n      // \u91CD\u7F6E\u5F00\u59CB\u68C0\u7D22\u7684\u4F4D\u7F6E\n      i = startIdx;\n      // \u5C06\u89E3\u6790\u5F97\u5230\u7684\u7ED3\u679C\u8FDB\u884C\u62FC\u63A5\n      templateStr += result;\n    } else if (isHorizontalLine(templates[i])) {\n      // \u5904\u7406\u6C34\u5E73\u5206\u5272\u7EBF\n      templateStr += parseHorizontalLine(templates[i]);\n      ++i;\n    } else if (isTable(templates[i])) {\n      const { result, startIdx } = parseTable(templates, i, len);\n      // \u91CD\u7F6E\u5F00\u59CB\u68C0\u7D22\u7684\u4F4D\u7F6E\n      i = startIdx;\n      // \u5C06\u89E3\u6790\u5F97\u5230\u7684\u7ED3\u679C\u8FDB\u884C\u62FC\u63A5\n      templateStr += result;\n    } else if (isNoOrderList(templates[i]) || isOrderList(templates[i])) {\n      // \u8BF4\u660E\u4E3A\u65E0\u5E8F\u5217\u8868\n      const { result, startIdx } = parseListItem(templates, i, len);\n      // \u8FD9\u91CC\u8FDB\u5165\u4E86\u5F53\u524D\u5206\u652F \u4E0B\u9762\u5C31\u4E0D\u4F1A\u8D70\u4E86 \u9632\u6B62\u8FD9\u4E2A\u9009\u9879\u6F0F\u6389 \u90A3\u4E48\u6211\u4EEC\u9700\u8981\u56DE\u9000\u4E00\u6B65 \u4E0B\u9762\u5904\u7406\u6709\u5E8F\u5217\u8868\u4E5F\u662F\u4E00\u6837\u7684\n      // \uFF08\u5206\u652F\u5904\u7406\u7ED3\u6784\u5F15\u51FA\u7684\u95EE\u9898\uFF09\n      i = startIdx - 1;\n      templateStr += result;\n    } else if (isPreCode(templates[i])) {\n      // \u4EE3\u7801\u5757\n      const { result, startIdx } = parseCode(templates, i, len, op);\n      i = startIdx;\n      templateStr += result;\n    } else if (isBLock(templates[i].trim())) {\n      // \u8BF4\u660E\u4E3A\u6BB5\u843D\u5757\n      templateStr += parseBlock(templates[i].trim());\n    } else {\n      // \u5904\u7406\u666E\u901A\u6587\u5B57\n      if ((templates[i] = templates[i].trim())) {\n        templateStr += parseNormalText(templates[i]);\n      }\n    }\n    i++;\n  }\n  return templateStr;\n}\n"],
  "mappings": "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",
  "names": []
}
