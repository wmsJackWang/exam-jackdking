import { Injector } from '@tanbo/di';
import { Component, Shortcut } from '../model/_api';
import { Commander } from './commander';
import { Selection } from './selection';
/**
 * 快捷键配置
 */
export interface KeymapState {
    ctrlKey: boolean;
    altKey: boolean;
    shiftKey: boolean;
    key: string;
}
export interface ZenCodingInterceptor {
    /** 匹配字符 */
    match(content: string): boolean;
    /** 触发键 */
    try(key: string): boolean;
    /** 触发执行的方法 */
    action(content: string): boolean;
}
/**
 * Textbus 键盘管理
 */
export declare class Keyboard {
    private components;
    private markdownDetect;
    private commander;
    private injector;
    private selection;
    private shortcutList;
    private zenCodingInterceptors;
    constructor(components: Component[], markdownDetect: boolean, commander: Commander, injector: Injector, selection: Selection);
    /**
     * 注册输入语法糖
     * @param interceptor
     */
    addZenCodingInterceptor(interceptor: ZenCodingInterceptor): {
        remove: () => void;
    };
    /**
     * 调用快捷键
     * @param keymapState 快捷键配置
     */
    execShortcut(keymapState: KeymapState): boolean;
    /**
     * 注册快捷键
     * @param shortcut 快捷键配置
     */
    addShortcut(shortcut: Shortcut): {
        remove: () => void;
    };
    private handleShortcut;
    private createZenCodingEx;
    private createShortcutEx;
}
