import { FormatHostBindingRender, VElement, VTextNode, Formatter } from '@textbus/core';
import { Matcher, MatchRule } from './matcher';
import { FormatLoader } from '@textbus/platform-browser';
export declare class OuterStyleFormatLoader extends Matcher<any, Formatter<any>> implements FormatLoader<any> {
    styleName: string;
    constructor(styleName: string, formatter: Formatter<any>, rule: MatchRule);
    read(node: HTMLElement): {
        formatter: Formatter<any>;
        value: string | number;
    };
}
export declare class OuterStyleFormatter implements Formatter<any> {
    name: string;
    styleName: string;
    priority: number;
    columned: boolean;
    constructor(name: string, styleName: string);
    render(children: Array<VElement | VTextNode>, formatValue: string): FormatHostBindingRender;
}
export declare const colorFormatter: OuterStyleFormatter;
export declare const colorFormatLoader: OuterStyleFormatLoader;
export declare const fontSizeFormatter: OuterStyleFormatter;
export declare const fontSizeFormatLoader: OuterStyleFormatLoader;
