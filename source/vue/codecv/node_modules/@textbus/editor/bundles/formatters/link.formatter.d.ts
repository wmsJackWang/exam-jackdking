import { Formatter, FormatValue, RenderMode, VElement, VTextNode } from '@textbus/core';
import { FormatLoader } from '@textbus/platform-browser';
import { Matcher } from './matcher';
export declare class LinkFormatLoader<T extends FormatValue> extends Matcher<T, Formatter<any>> implements FormatLoader<any> {
    constructor(formatter: Formatter<any>);
    read(element: HTMLElement): {
        formatter: Formatter<any>;
        value: Record<string, string>;
    };
}
export declare class LinkFormatter implements Formatter<any> {
    priority: number;
    name: string;
    columned: boolean;
    render(children: Array<VElement | VTextNode>, formatValue: Record<string, string>, renderMode: RenderMode): VElement;
}
export declare const linkFormatter: LinkFormatter;
export declare const linkFormatLoader: LinkFormatLoader<FormatValue>;
