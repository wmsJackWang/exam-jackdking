import { ComponentInitData, ComponentInstance, RenderMode, Slot, SlotRender, VElement } from '@textbus/core';
import { ComponentLoader } from '@textbus/platform-browser';
import { Injector } from '@tanbo/di';
export type TimelineType = 'primary' | 'info' | 'success' | 'warning' | 'danger' | 'dark' | 'gray';
export interface TimelineSlotState {
    type: TimelineType;
}
export declare function createTimelineItem(injector: Injector, type?: TimelineType): Slot<TimelineSlotState>;
export declare const timelineComponent: import("@textbus/core").Component<ComponentInstance<{
    render(slotRender: SlotRender, renderMode: RenderMode): VElement;
}, void, TimelineSlotState>, ComponentInitData<void, TimelineSlotState>>;
export declare const timelineComponentLoader: ComponentLoader;
